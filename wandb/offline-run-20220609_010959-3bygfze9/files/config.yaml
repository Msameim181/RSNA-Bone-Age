wandb_version: 1

WandB_usage:
  desc: null
  value: true
_wandb:
  desc: null
  value:
    cli_version: 0.12.9
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    python_version: 3.8.5
    start_time: 1654720799
    t:
      1:
      - 1
      - 5
      2:
      - 1
      - 5
      3:
      - 4
      - 13
      - 15
      4: 3.8.5
      5: 0.12.9
      8:
      - 3
      - 5
amp:
  desc: null
  value: false
basedOnSex:
  desc: null
  value: false
batch_size:
  desc: null
  value: 8
criterion:
  desc: null
  value: MSELoss
dataset_name:
  desc: null
  value: rsna-bone-age
device:
  desc: null
  value: cuda
epochs:
  desc: null
  value: 20
gender:
  desc: null
  value: male
learning_rate:
  desc: null
  value: 0.001
model:
  desc: null
  value: ResNet50_Pre
name:
  desc: null
  value: 20220609_010958_ResNet50_Pre
net:
  desc: null
  value: "ResNet(\n  (resnet): ResNet(\n    (conv1): Conv2d(1, 64, kernel_size=(7,\
    \ 7), stride=(2, 2), padding=(3, 3), bias=False)\n    (bn1): BatchNorm2d(64, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n    (relu): ReLU(inplace=True)\n\
    \    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n\
    \    (layer1): Sequential(\n      (0): Bottleneck(\n        (conv1): Conv2d(64,\
    \ 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv2):\
    \ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
    \        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (downsample): Sequential(\n     \
    \     (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  \
    \        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        )\n      )\n      (1): Bottleneck(\n        (conv1): Conv2d(256, 64,\
    \ kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv2):\
    \ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
    \        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n      )\n      (2): Bottleneck(\n       \
    \ (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)\n  \
    \      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(64, 256, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \      )\n    )\n    (layer2): Sequential(\n      (0): Bottleneck(\n        (conv1):\
    \ Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn1):\
    \ BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(128, 512, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \        (downsample): Sequential(\n          (0): Conv2d(256, 512, kernel_size=(1,\
    \ 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        )\n      )\n      (1): Bottleneck(\n\
    \        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(128, 512, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \      )\n      (2): Bottleneck(\n        (conv1): Conv2d(512, 128, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv3):\
    \ Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn3):\
    \ BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n      )\n      (3): Bottleneck(\n       \
    \ (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)\n \
    \       (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(128, 512, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \      )\n    )\n    (layer3): Sequential(\n      (0): Bottleneck(\n        (conv1):\
    \ Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn1):\
    \ BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(256, 1024, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(1024, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \        (downsample): Sequential(\n          (0): Conv2d(512, 1024, kernel_size=(1,\
    \ 1), stride=(2, 2), bias=False)\n          (1): BatchNorm2d(1024, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n        )\n      )\n \
    \     (1): Bottleneck(\n        (conv1): Conv2d(1024, 256, kernel_size=(1, 1),\
    \ stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv3):\
    \ Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn3):\
    \ BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n      )\n      (2): Bottleneck(\n       \
    \ (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(256, 1024, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(1024, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \      )\n      (3): Bottleneck(\n        (conv1): Conv2d(1024, 256, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv3):\
    \ Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn3):\
    \ BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n      )\n      (4): Bottleneck(\n       \
    \ (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(256, 1024, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(1024, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \      )\n      (5): Bottleneck(\n        (conv1): Conv2d(1024, 256, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv3):\
    \ Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn3):\
    \ BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n      )\n    )\n    (layer4): Sequential(\n\
    \      (0): Bottleneck(\n        (conv1): Conv2d(1024, 512, kernel_size=(1, 1),\
    \ stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3,\
    \ 3), stride=(2, 2), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv3):\
    \ Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn3):\
    \ BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (downsample): Sequential(\n     \
    \     (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)\n\
    \          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        )\n      )\n      (1): Bottleneck(\n        (conv1): Conv2d(2048, 512,\
    \ kernel_size=(1, 1), stride=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv2):\
    \ Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
    \        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n      )\n      (2): Bottleneck(\n       \
    \ (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (conv3): Conv2d(512, 2048, kernel_size=(1,\
    \ 1), stride=(1, 1), bias=False)\n        (bn3): BatchNorm2d(2048, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \      )\n    )\n    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n    (fc):\
    \ Sequential(\n      (0): Dropout(p=0.2, inplace=False)\n      (1): Linear(in_features=2064,\
    \ out_features=2048, bias=True)\n      (2): ReLU()\n      (3): Dropout(p=0.3,\
    \ inplace=False)\n      (4): Linear(in_features=2048, out_features=2048, bias=True)\n\
    \      (5): ReLU()\n      (6): Linear(in_features=2048, out_features=1, bias=True)\n\
    \      (7): Sigmoid()\n    )\n    (fc1): Sequential(\n      (0): Linear(in_features=1,\
    \ out_features=16, bias=True)\n      (1): ReLU()\n    )\n  )\n)"
optimizer:
  desc: null
  value: Adam
save_checkpoint:
  desc: null
  value: true
test_dataset_size:
  desc: null
  value: 1425
train_dataset_size:
  desc: null
  value: 12611
