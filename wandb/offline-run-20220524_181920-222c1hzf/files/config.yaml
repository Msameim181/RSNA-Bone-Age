wandb_version: 1

WandB_usage:
  desc: null
  value: true
_wandb:
  desc: null
  value:
    cli_version: 0.12.9
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    python_version: 3.8.5
    start_time: 1653400160
    t:
      1:
      - 1
      2:
      - 1
      3:
      - 4
      - 13
      - 15
      4: 3.8.5
      5: 0.12.9
      8:
      - 3
      - 5
amp:
  desc: null
  value: false
basedOnSex:
  desc: null
  value: true
batch_size:
  desc: null
  value: 8
criterion:
  desc: null
  value: BCEWithLogitsLoss
dataset_name:
  desc: null
  value: rsna-bone-age-kaggle
device:
  desc: null
  value: cuda
epochs:
  desc: null
  value: 20
gender:
  desc: null
  value: female
learning_rate:
  desc: null
  value: 0.001
model:
  desc: null
  value: ResNet34_Pre_female
name:
  desc: null
  value: 20220524_181920_ResNet34_Pre_female
net:
  desc: null
  value: "ResNet(\n  (resnet): ResNet(\n    (conv1): Conv2d(1, 64, kernel_size=(7,\
    \ 7), stride=(2, 2), padding=(3, 3), bias=False)\n    (bn1): BatchNorm2d(64, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n    (relu): ReLU(inplace=True)\n\
    \    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)\n\
    \    (layer1): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64,\
    \ 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n       \
    \ (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n \
    \     (1): BasicBlock(\n        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
    \ 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1,\
    \ affine=True, track_running_stats=True)\n        (relu): ReLU(inplace=True)\n\
    \        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n      )\n      (2): BasicBlock(\n        (conv1):\
    \ Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(64, 64, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(64,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n \
    \   )\n    (layer2): Sequential(\n      (0): BasicBlock(\n        (conv1): Conv2d(64,\
    \ 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n      \
    \  (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample):\
    \ Sequential(\n          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2),\
    \ bias=False)\n          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n    \
    \    (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n      (2): BasicBlock(\n        (conv1): Conv2d(128, 128, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(128,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu):\
    \ ReLU(inplace=True)\n        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1,\
    \ 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(128, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (3): BasicBlock(\n\
    \        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n    )\n    (layer3): Sequential(\n      (0): BasicBlock(\n        (conv1):\
    \ Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample):\
    \ Sequential(\n          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2,\
    \ 2), bias=False)\n          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n    \
    \    (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n      (2): BasicBlock(\n        (conv1): Conv2d(256, 256, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu):\
    \ ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1,\
    \ 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (3): BasicBlock(\n\
    \        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n      (4): BasicBlock(\n        (conv1): Conv2d(256, 256, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(256,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu):\
    \ ReLU(inplace=True)\n        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1,\
    \ 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(256, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (5): BasicBlock(\n\
    \        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n    )\n    (layer4): Sequential(\n      (0): BasicBlock(\n        (conv1):\
    \ Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n\
    \        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \        (relu): ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (downsample):\
    \ Sequential(\n          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2,\
    \ 2), bias=False)\n          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        )\n      )\n      (1): BasicBlock(\n    \
    \    (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1,\
    \ 1), bias=False)\n        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True,\
    \ track_running_stats=True)\n        (relu): ReLU(inplace=True)\n        (conv2):\
    \ Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n\
    \        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n\
    \      )\n      (2): BasicBlock(\n        (conv1): Conv2d(512, 512, kernel_size=(3,\
    \ 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (bn1): BatchNorm2d(512,\
    \ eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (relu):\
    \ ReLU(inplace=True)\n        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1,\
    \ 1), padding=(1, 1), bias=False)\n        (bn2): BatchNorm2d(512, eps=1e-05,\
    \ momentum=0.1, affine=True, track_running_stats=True)\n      )\n    )\n    (avgpool):\
    \ AdaptiveAvgPool2d(output_size=(1, 1))\n    (fc): Sequential(\n      (0): Linear(in_features=512,\
    \ out_features=512, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=512,\
    \ out_features=229, bias=True)\n    )\n  )\n)"
optimizer:
  desc: null
  value: Adam
save_checkpoint:
  desc: null
  value: true
test_dataset_size:
  desc: null
  value: 100
train_dataset_size:
  desc: null
  value: 5778
